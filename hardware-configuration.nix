# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" ];
  boot.initrd.kernelModules = [ "amdgpu" ];
  boot.kernelModules = [ "kvm-amd" ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/6d8b7dc3-8a16-4fca-a9f4-35554ad8f98c";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-2516f782-f19b-452b-a620-e73c6581946a".device = "/dev/disk/by-uuid/2516f782-f19b-452b-a620-e73c6581946a";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/B18D-6B5A";
      fsType = "vfat";
    };

  fileSystems."/media/data2" =
    { device = "/dev/disk/by-uuid/358995b3-330d-4268-8ac4-2ea7e6edc0a2";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."data2".device = "/dev/disk/by-uuid/da5989ea-a8be-4693-aa0e-7f7f78554d4d";

  fileSystems."/media/data1" =
    { device = "/dev/disk/by-uuid/df673705-16b6-43a2-b38b-47c4c906ba14";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."data1".device = "/dev/disk/by-uuid/ef8de680-0070-4fab-8e96-4aa98868f8cf";

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp14s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp15s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
